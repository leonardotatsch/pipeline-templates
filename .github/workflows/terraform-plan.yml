name: Terraform and Infracost workflow

on:
  workflow_call:
    inputs:
      terraform-version:
        default: '1.0.0'
        type: string
      working-directory:
        type: string
        default: './'
      infracost_enabled:
        type: boolean
        default: false
      storage_account_name:
        type: string
        required: true
      container_name:
        type: string
        required: true
      tf_file_name:
        type: string
        required: true
      resource_group_name:
        type: string
        required: true
      environment:
        type: string
        required: true
      AZURE_CLIENT_ID:
        type: string
        required: true
      AZURE_CLIENT_SECRET:
        type: string
        required: true
      AZURE_SUBSCRIPTION_ID:
        type: string
        required: true
      AZURE_TENANT_ID:
        type: string
        required: true

jobs:
  terraform-plan:
    env: 
      AZURE_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ inputs.AZURE_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Setup ${{ inputs.terraform-version }} version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ inputs.terraform-version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ inputs.working-directory }}
          tf_actions_comment: true
          args: -upgrade -backend-config=storage_account_name=${{ inputs.storage_account_name }} -backend-config=container_name=${{ inputs.container_name }} -backend-config=key=${{ inputs.tf_file_name }} -backend-config=resource_group_name=${{ inputs.resource_group_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ inputs.working-directory }}
      
      - name: Setup Infracost
        if: ${{ inputs.infracost_enabled == 'true' }}
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Save Infracost Report as JSON
        if: ${{ inputs.infracost_enabled == 'true' }}
        run: infracost breakdown --path plan.json --format json --output infracost-report.json

      - name: Post Infracost comment
        if: ${{ inputs.infracost_enabled == 'true' }}
        run: |
          infracost comment github --path infracost-report.json \
                                   --repo $GITHUB_REPOSITORY \
                                   --github-token ${{github.token}} \
                                   --pull-request ${{github.event.pull_request.number}} \
                                   --behavior update