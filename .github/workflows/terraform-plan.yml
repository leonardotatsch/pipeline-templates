name: Terraform and Infracost workflow

on:
  workflow_call:
    inputs:
      terraform-version:
        default: '1.0.0'
        type: string
      working-directory:
        type: string
        default: './'
      infracost_enabled:
        type: boolean
        default: false
      storage_account_name:
        type: string
        required: true
      container_name:
        type: string
        required: true
      tf_file_name:
        type: string
        required: true
      resource_group_name:
        type: string
        required: true
      environment:
        type: string
        required: true
      tf_apply:
        type: boolean
        default: false
      tf_destroy:
        type: boolean
        default: false
    secrets:
      INFRACOST_API_KEY:
        required: false
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

jobs:
  terraform-with-infracost:
    env: 
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      VARS_CONTEXT: ${{ toJson(vars) }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set env vars from vars context JSON
        run: |
          # Pipe the JSON string into jq
          echo "$VARS_CONTEXT" | 
          # Convert JSON object into an array of key-value pairs
          jq -r 'to_entries | 
          # Map over each key-value pair
          .[] | 
          # Format each pair as "KEY=VALUE" and append it all to the environment file
          "\(.key)=\(.value)"' >> $GITHUB_ENV

      - name: Check env vars
        run: printenv

      - name: Terraform Setup ${{ inputs.terraform-version }} version
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Terraform Init
        run: terraform init -upgrade -backend-config=storage_account_name=${{ inputs.storage_account_name }} -backend-config=container_name=${{ inputs.container_name }} -backend-config=key=${{ inputs.tf_file_name }} -backend-config=resource_group_name=${{ inputs.resource_group_name }}
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Apply
        if: ${{ inputs.tf_apply == true }}
        run: terraform apply -auto-approve
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Destroy
        if: ${{ inputs.tf_destroy == true }}
        run: terraform destroy -auto-approve
        working-directory: ${{ inputs.working-directory }}
      
      - name: Setup Infracost
        if: ${{ inputs.infracost_enabled == true }}
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Save Infracost Report as JSON
        if: ${{ inputs.infracost_enabled == true }}
        run: infracost breakdown --path plan.json --format json --output infracost-report.json

      - name: Post Infracost comment
        if: ${{ inputs.infracost_enabled == true }}
        run: |
          infracost comment github --path infracost-report.json \
                                   --repo $GITHUB_REPOSITORY \
                                   --github-token ${{github.token}} \
                                   --pull-request ${{github.event.pull_request.number}} \
                                   --behavior update